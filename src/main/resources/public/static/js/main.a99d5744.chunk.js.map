{"version":3,"sources":["components/MatchDetailCard.js","components/MatchBreifCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTiles.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchBreifCard","TeamPage","useParams","useState","team","setTeam","useEffect","a","fetch","process","response","json","data","console","log","fetchTeam","title","value","toalMatchPlayed","totalWinMatch","color","matches","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatch","TeamTiles","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a99d5744.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MatchDetailCard.scss'\nexport const MatchDetailCard = ({teamName, match}) => {\n    if(!match){ return null;}\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/team/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n  return (\n    <div className={isMatchWon? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n        <div>\n            <span className = \"vs\">vs</span>\n            <h1><Link to ={otherTeamRoute} > {otherTeam}</Link></h1>\n            <h2 className = \"match-date\">{match.date}</h2>\n            <h3 className = \"match-venue\">{match.venue}</h3>\n            <h3 className = \"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n        </div>\n        <div className = \"additional-details\">\n            <h3>First Innings</h3>\n            <p>{match.team1}</p>\n            <h3>Second Innings</h3>\n            <p>{match.team2}</p>\n            <h3>Man of the Match</h3>\n            <p>{match.playerOfMatch}</p>\n            <h3>Umpires</h3>\n            <p>{match.umpire1}, {match.umpire2}</p>\n        </div>\n    </div>\n  );\n}\n\n\n","import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MatchBreifCard.scss';\nexport const MatchBreifCard = ({teamName, match}) => {\n    if(!match) return null;\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/team/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n    return (\n    <div className={isMatchWon ? 'MatchBreifCard won-card' : 'MatchBreifCard lost-card'}>\n      <span className = \"vs\">vs</span>\n     <h3><Link to ={otherTeamRoute} > {otherTeam}</Link></h3>\n  <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n     \n    </div>\n  );\n}\n\n\n","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchBreifCard } from '../components/MatchBreifCard';\nimport './TeamPage.scss';\nimport {Link} from 'react-router-dom';\nexport const TeamPage = () => {\n\n    const { teamName } = useParams();\n    const [team, setTeam] = useState({});\n\n    \n\n    \n\n    useEffect(\n        () =>{\n            const fetchTeam = async () =>{\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n                const data = await response.json();\n                console.log(data)\n                \n                setTeam(data);\n            };\n            fetchTeam();\n        },[teamName]\n    \n    );\n   \nif(!team || !team.teamName){\n    return <h1>Error 404 !!! Team Not Found</h1>\n}\n  return (\n    <div className=\"TeamPage\">\n      <div className = \"team-name-section\"><h1 className = \"team-name\">{team.teamName}</h1></div>\n     <div className = \"win-loss-section\">Win/Losses\n     <PieChart\n  data={[\n    { title: 'Losses', value: (team.toalMatchPlayed - team.totalWinMatch), color: '#a34d5d' },\n    { title: 'Win', value: team.totalWinMatch, color: '#4da375' },\n    \n  ]}\n/>\n</div>\n     <div className = \"match-detail-section\">\n     <h3>Latest Matches</h3>\n      <MatchDetailCard teamName = {team.teamName} match = {team.matches[0]}/>\n      </div>\n      \n      {team.matches && team.matches.slice(1).map( match => < MatchBreifCard key={match.id} teamName = {team.teamName} match ={match} />)}\n     <div className=\"more-link\">\n       <Link to ={`/team/${teamName}/year/${process.env.REACT_APP_DATAEND_YEAR}`}>More ></Link>\n     </div>\n    </div>\n  );\n}\n\n\n","import {React} from 'react';\nimport {Link} from 'react-router-dom';\nimport './YearSelector.scss'\nexport const YearSelector = ({teamName}) => {\n\n    let years =[];\n\n    const startYear = process.env.REACT_APP_DATASTART_YEAR;\n    const endYear = process.env.REACT_APP_DATAEND_YEAR;\n\n    for(let i = startYear; i<=endYear; i++){\n        years.push(i);\n    }\n\n    return (\n        <ol className = \"YearSelector\">\n        {years.map(year => (\n        \n        <li key={year}>\n           <Link  to = {`/team/${teamName}/year/${year}`}>{year}</Link> \n        </li>\n        \n        ))}\n        </ol>\n    );\n       \n    \n}\n","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport './MatchPage.scss'\nimport { YearSelector } from '../components/YearSelector';\n\nexport const MatchPage = () => {\n\n    const {teamName, year} = useParams();\n  const[matches,setMatches] = useState([]);\n    \n  useEffect(\n\n        () => {\n            const fetchMatch = async () =>{\n                const response  = await fetch(`http://192.168.1.15:9090/team/${teamName}/year/${year}`);\n                const data =  await response.json();\n                setMatches(data);\n            };\n            fetchMatch();\n        },[teamName, year]\n\n  );\n  \n  if(!matches){\n    return <h1>Error 404 !!! Team Not Found</h1>\n  }\n  return (\n    \n    <div className=\"MatchPage\">\n      <div className=\"year-selector\">\n       <h3>Select Year</h3> \n        <YearSelector teamName = {teamName}/>\n      </div>\n      <div>         \n<h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n      {matches &&  matches.map( match => < MatchDetailCard key={match.id} teamName = {teamName} match ={match} />)}\n      </div>\n\n    </div>\n  );\n}\n\n","import { React } from 'react';\nimport './TeamTiles.scss';\nimport {Link} from 'react-router-dom';\nexport const TeamTiles = ({teamName}) => {\n    return(\n\n        <div className=\"TeamTiles\">\n            <h1>\n                <Link to = {`/team/${teamName}`}>\n                    {teamName}\n                </Link>\n            </h1>\n        </div>\n\n    );\n}","import { React, useEffect, useState } from 'react';\n\nimport './HomePage.scss';\nimport { TeamTiles } from '../components/TeamTiles';\nexport const HomePage = () => {\n\n   \n    const [teams, setTeams] = useState([]);\n\n    \n\n    \n\n    useEffect(\n        () =>{\n            const fetchAllTeams = async () =>{\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n                const data = await response.json();\n                console.log(data)\n                \n                setTeams(data);\n            };\n            fetchAllTeams();\n        },[]\n    \n    );\n   \n\n  return (\n    <div className=\"HomePage\">\n      <div className = \"header-section\"><h1 className = \"app-name\">IPL DASHBOARD</h1></div>\n    \n    <div className=\"team-grid\">\n        {teams.map(team => <TeamTiles key={team.id} teamName={team.teamName}/>)}\n    </div>\n    </div>\n  );\n}\n\n\n","import {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.scss';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n        <Route path = \"/team/:teamName/year/:year\" >\n          <MatchPage />\n          </Route>\n        <Route path = \"/team/:teamName\" >\n          <TeamPage />\n          </Route>\n          <Route path = \"/\" >\n\n          <HomePage />\n          </Route>\n          </Switch>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}